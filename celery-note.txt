celery 详解笔记
一.原理
    Celery是基于Python开发的一个分布式任务队列，它是一个专注于实时处理的任务队列，同时也支持任务调度，支持异步执行任务。Celery 实现异步调用的原理核心其实是将任务执行单元 worker 和 任务派发单元 分开，从而达到异步的效果；
    Celery将需要执行的任务发送到消息队列中，然后再由任务执行单元根据具体的配置(绑定到具体哪个队列，默认为defaults)从消息队列中获取任务执行，这样就实现了异步的效果。 

二.架构
任务模块 Task
包含异步任务和定时任务。其中，异步任务通常在业务逻辑中被触发并发往任务队列，而定时任务由 Celery Beat 进程周期性地将任务发往任务队列。

消息中间件 Broker
Broker，即为任务调度队列，接收任务生产者发来的消息（即任务），将任务存入队列。Celery 本身不提供队列服务，官方推荐使用 RabbitMQ 和 Redis 等。

任务执行单元 Worker
Worker 是执行任务的处理单元，它实时监控消息队列，获取队列中调度的任务，并执行它。

任务结果存储 Backend
Backend 用于存储任务的执行结果，以供查询。同消息中间件一样，存储也可使用 RabbitMQ, Redis 和 MongoDB 等。

三.安装配置详解
# 同时启动 worker 和 beat
# celery -B -A celerybase worker -l INFO
# 启动 worker
# celery worker -A celerybase -l INFO
# 启动 beat
# celery beat -A celerybase -l INFO
# 显示光标  echo -e "\033[?25h"

# 安装 django-celery:  pip install django-celery
# 启动worker: python manage.py celery worker -l INFO
# 问题1：AttributeError: 'str' object has no attribute 'items'
# redis版本问题，降低版本  redis (2.10.6)
# 问题2：超时问题
# pip install  -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com  -r requirements.txt

# 启动beat: python manage.py celery beat -l INFO
# 安装 flower: pip install flower
# 启动flower: python manage.py celery flower

# 安装配置: pip install supervisord  配置管理worker，beat，flower的工具
# echo_supervisord_conf > conf/supervisord.conf
# 启动: supervisord -c conf/supervisord.conf
# 命令行: supervisorctl

